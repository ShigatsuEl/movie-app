{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","year","title","summary","poster","genres","className","src","alt","map","genre","index","App","state","isLoading","movies","point","getMovies","a","loadMovies","axios","get","data","setState","pointArray","pointInterval","setInterval","push","join","length","splice","setTimeout","clearInterval","this","movie","id","medium_cover_image","React","Component","ReactDOM","render","document","getElementById"],"mappings":"sUAiCeA,MA7Bf,YAA0D,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OAC7C,OACE,sBAAKC,UAAU,QAAf,UACE,qBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACrC,sBAAKI,UAAU,cAAf,UACE,oBAAIA,UAAU,eAAd,SAA8BJ,IAC9B,oBAAII,UAAU,cAAd,SAA6BL,IAC7B,oBAAIK,UAAU,gBAAd,SACGD,EAAOI,KAAI,SAACC,EAAOC,GAAR,OACV,oBAAgBL,UAAU,qBAA1B,SACGI,GADMC,QAKb,mBAAGL,UAAU,iBAAb,SAA+BH,WC4DxBS,G,kNAxEbC,MAAQ,CACNC,WAAW,EACXC,OAAQ,GACRC,MAAO,I,EAGTC,U,sBAAY,8BAAAC,EAAA,6DACV,EAAKC,aADK,SAMAC,IAAMC,IACd,4DAPQ,gBAIEN,EAJF,EAGRO,KACEA,KAAQP,OAWZ,EAAKQ,SAAS,CAAER,SAAQD,WAAW,IAfzB,2C,2DAkBE,IAAD,OACLU,EAAa,GAEbC,EAAgBC,aAAY,WAChCF,EAAWG,KAFC,KAGZ,EAAKJ,SAAS,CAAEP,MAAOQ,EAAWI,KAAK,MACb,IAAtBJ,EAAWK,QACbL,EAAWM,OAAO,EAAG,KAEtB,KAEHC,YAAW,WACTC,cAAcP,KACb,O,0CAIHQ,KAAKhB,c,+BAGG,IAAD,EACuBgB,KAAKpB,MAA3BC,EADD,EACCA,UAAWC,EADZ,EACYA,OACnB,OACE,yBAAST,UAAU,YAAnB,SACGQ,EACC,qBAAKR,UAAU,SAAf,SACE,uBAAMA,UAAU,eAAhB,oBAAuC2B,KAAKpB,MAAMG,WAGpD,qBAAKV,UAAU,SAAf,SACGS,EAAON,KAAI,SAACyB,GAAD,OACV,cAAC,EAAD,CAEEC,GAAID,EAAMC,GACVlC,KAAMiC,EAAMjC,KACZC,MAAOgC,EAAMhC,MACbC,QAAS+B,EAAM/B,QACfC,OAAQ8B,EAAME,mBACd/B,OAAQ6B,EAAM7B,QANT6B,EAAMC,e,GAzDTE,IAAMC,Y,MCAxBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.5f413804.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Movie.css\";\r\n\r\nfunction Movie({ year, title, summary, poster, genres }) {\r\n  return (\r\n    <div className=\"movie\">\r\n      <img src={poster} alt={title} title={title}></img>\r\n      <div className=\"movie__data\">\r\n        <h3 className=\"movie__title\">{title}</h3>\r\n        <h5 className=\"movie__year\">{year}</h5>\r\n        <ul className=\"movie__genres\">\r\n          {genres.map((genre, index) => (\r\n            <li key={index} className=\"movie__genres-type\">\r\n              {genre}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <p className=\"movie__summary\">{summary}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nMovie.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  year: PropTypes.number.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  summary: PropTypes.string.isRequired,\r\n  poster: PropTypes.string.isRequired,\r\n  genres: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n};\r\n\r\nexport default Movie;\r\n","import React from \"react\";\nimport axios from \"axios\";\nimport Movie from \"./Movie\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  state = {\n    isLoading: true,\n    movies: [],\n    point: \"\",\n  };\n\n  getMovies = async () => {\n    this.loadMovies();\n    const {\n      data: {\n        data: { movies },\n      },\n    } = await axios.get(\n      \"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\"\n    );\n    /* \n    const {data: {data: {movies}}} = await fetch(\"https://yts-proxy.now.sh/list_movies.json\")\n      .then((response) => response.json())\n      .then((data) => console.log(data)); \n    여기서 사용한 fetch는 위의 axiox와 같은 역할을 한다. 표현방법만 다를 뿐, 어떤 것을 사용해도 문제 되지 않는다.\n    */\n    this.setState({ movies, isLoading: false });\n  };\n\n  loadMovies() {\n    const pointArray = [];\n    const point = \".\";\n    const pointInterval = setInterval(() => {\n      pointArray.push(point);\n      this.setState({ point: pointArray.join(\"\") });\n      if (pointArray.length === 3) {\n        pointArray.splice(0, 3);\n      }\n    }, 300);\n\n    setTimeout(() => {\n      clearInterval(pointInterval);\n    }, 2000);\n  }\n\n  componentDidMount() {\n    this.getMovies();\n  }\n\n  render() {\n    const { isLoading, movies } = this.state;\n    return (\n      <section className=\"container\">\n        {isLoading ? (\n          <div className=\"loader\">\n            <span className=\"loader__text\">Loading{this.state.point}</span>\n          </div>\n        ) : (\n          <div className=\"movies\">\n            {movies.map((movie) => (\n              <Movie\n                key={movie.id}\n                id={movie.id}\n                year={movie.year}\n                title={movie.title}\n                summary={movie.summary}\n                poster={movie.medium_cover_image}\n                genres={movie.genres}\n              />\n            ))}\n          </div>\n        )}\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./reset.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}